from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from lunarcalendar import Converter, Solar
from datetime import date
import os

async def am_lich(update: Update, context: ContextTypes.DEFAULT_TYPE):
    today = date.today()
    solar = Solar(today.year, today.month, today.day)
    lunar = Converter.Solar2Lunar(solar)

    reply = f"H√¥m nay d∆∞∆°ng l·ªãch: {today.strftime('%d/%m/%Y')}\n" \
            f"L·ªãch √¢m: Ng√†y {lunar.day} th√°ng {lunar.month}" \
            f"{' (nhu·∫≠n)' if lunar.isleap else ''} nƒÉm {lunar.year}"

    await update.message.reply_text(reply)

if __name__ == '__main__':
    # L·∫•y token t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
    TOKEN = os.environ.get("BOT_TOKEN")

    if not TOKEN:
        print("‚ùå BOT_TOKEN ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p trong bi·∫øn m√¥i tr∆∞·ªùng!")
        exit(1)

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("licham", am_lich))

    print("ü§ñ Bot ƒëang ch·∫°y...")
    app.run_polling()
